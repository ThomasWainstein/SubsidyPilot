name: Phase D E2E Testing

on:
  workflow_dispatch:
    inputs:
      test_environment:
        description: 'Test environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
  schedule:
    - cron: "17 2 * * *"   # nightly 02:17 UTC

jobs:
  run-harness:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with: 
          deno-version: v1.x

      - name: Generate golden fixtures
        run: deno run -A scripts/make_golden_fixtures.ts

      - name: Run Phase D harness
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          HARNESS_BUCKET: farm-documents
          HARNESS_USE_SERVICE_ROLE: "true"   # Use service role for function calls
        run: deno run -A scripts/phase_d_harness.ts

      - name: Upload test artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: phase-d-test-artifacts
          path: |
            fixtures/
            fixtures_ext/
            *.log
          retention-days: 7

      - name: Slack notify success
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ -n "$SLACK_WEBHOOK_URL" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data "{
                \"text\": \"ðŸŽ‰ Phase D harness: 21/21 passed\",
                \"blocks\": [
                  {
                    \"type\": \"section\",
                    \"text\": {
                      \"type\": \"mrkdwn\",
                      \"text\": \"*Phase D E2E Tests Passed* âœ…\\nâ€¢ Repository: $GITHUB_REPOSITORY\\nâ€¢ Branch: $GITHUB_REF\\nâ€¢ Commit: \`${GITHUB_SHA:0:8}\`\\nâ€¢ All golden fixtures validated successfully\"
                    }
                  }
                ]
              }" \
              "$SLACK_WEBHOOK_URL"
          fi

      - name: Slack notify failure
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ -n "$SLACK_WEBHOOK_URL" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data "{
                \"text\": \"ðŸš¨ Phase D harness FAILED\",
                \"blocks\": [
                  {
                    \"type\": \"section\",
                    \"text\": {
                      \"type\": \"mrkdwn\",
                      \"text\": \"*Phase D E2E Tests Failed* ðŸš¨\\nâ€¢ Repository: $GITHUB_REPOSITORY\\nâ€¢ Branch: $GITHUB_REF\\nâ€¢ Commit: \`${GITHUB_SHA:0:8}\`\\nâ€¢ <$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|View Logs>\"
                    }
                  },
                  {
                    \"type\": \"section\",
                    \"text\": {
                      \"type\": \"mrkdwn\",
                      \"text\": \"Phase D table extraction pipeline requires immediate attention. Check logs for detailed error information.\"
                    }
                  }
                ]
              }" \
              "$SLACK_WEBHOOK_URL"
          fi

  health-check:
    runs-on: ubuntu-latest
    needs: run-harness
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with: 
          deno-version: v1.x

      - name: Run Phase D validation script
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: deno run --allow-net --allow-env supabase/functions/extract-document-data/phase-d-test.ts

      - name: Create summary report
        run: |
          echo "## Phase D E2E Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Workflow**: ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ github.event.inputs.test_environment || 'staging' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ needs.run-harness.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the job logs for detailed test results and metrics." >> $GITHUB_STEP_SUMMARY