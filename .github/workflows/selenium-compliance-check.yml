name: Selenium 4+ Compliance Enforcement

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  selenium-compliance:
    runs-on: ubuntu-latest
    name: üî• Ruthless Selenium 4+ Compliance Check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r AgriToolScraper-main/requirements.txt
          
      - name: üî• BULLETPROOF SELENIUM 4+ COMPLIANCE SCAN
        run: |
          echo "üî• BULLETPROOF VALIDATION WITH MULTIPLE DEFENSE LAYERS"
          echo "üõ°Ô∏è  AST parsing, regex validation, whitelist checking, smoke tests"
          python AgriToolScraper-main/selenium_compliance_validator.py
          
      - name: üî• LEGACY VALIDATOR BACKUP CHECK
        run: |
          echo "üî• RUNNING LEGACY VALIDATOR AS BACKUP"
          python AgriToolScraper-main/validate_selenium_compliance.py
          
      - name: üß™ VALIDATOR UNIT TESTS
        run: |
          echo "üß™ TESTING VALIDATOR ACCURACY"
          echo "Testing compliant code (should pass)..."
          python -c "
import sys
sys.path.append('AgriToolScraper-main')
from selenium_compliance_validator import ComplianceValidator
validator = ComplianceValidator()
violations = validator.scan_file('AgriToolScraper-main/tests/test_compliant_code.py')
if violations:
    print('‚ùå FALSE POSITIVE: Compliant code flagged')
    print(violations)
    sys.exit(1)
else:
    print('‚úÖ Compliant code validation passed')
"
          echo "Testing legacy code (should fail)..."
          python -c "
import sys
sys.path.append('AgriToolScraper-main')
from selenium_compliance_validator import ComplianceValidator
validator = ComplianceValidator()
violations = validator.scan_file('AgriToolScraper-main/tests/test_legacy_violations.py')
if not violations:
    print('‚ùå FALSE NEGATIVE: Legacy violations not detected')
    sys.exit(1)
else:
    print(f'‚úÖ Legacy violations detected correctly: {len(violations)} violations')
"
          
      - name: ‚úÖ COMPLIANCE SUCCESS
        if: success()
        run: |
          echo "üî• SELENIUM 4+ COMPLIANCE ENFORCEMENT PASSED"
          echo "‚úÖ ZERO VIOLATIONS DETECTED"
          echo "‚úÖ 100% SELENIUM 4+ COMPLIANT"
          echo "‚úÖ READY FOR MERGE"
          
      - name: ‚ùå COMPLIANCE FAILURE
        if: failure()
        run: |
          echo "‚ùå SELENIUM 4+ COMPLIANCE VIOLATIONS DETECTED"
          echo "‚ùå BUILD FAILED - VIOLATIONS MUST BE FIXED"
          echo "‚ùå DO NOT MERGE UNTIL ALL ISSUES RESOLVED"
          echo ""
          echo "üìã REQUIRED ACTIONS:"
          echo "1. Review SELENIUM_4_COMPLIANCE_ENFORCEMENT.md"
          echo "2. Fix all forbidden patterns identified"
          echo "3. Run local validation: python AgriToolScraper-main/validate_selenium_compliance.py"
          echo "4. Commit fixes and re-run this check"
          exit 1